dds$condition <- relevel(dds$condition, ref = i)
dds <- DESeq(dds)
comparison_name <- paste0("condition_", j, "_vs_", i)
library(tidyverse)
library(DESeq2)
library(here)
setwd("A:/home/users/wilkino/ALL_RIBOSEQ/Roberto_Simone/RS_mapped/results/genome_dedup/")
samples <- c("A1",
"A2",
"A3",
"B1",
"B2",
"B3",
"C1",
"C2",
"C3",
"D1",
"D2",
"D3",
"E1",
"E2",
"E3",
"G1",
"G2")
for(i in samples){
message(i)
filename <- paste0(i, ".Aligned.sortedByCoord.out.bam29to35nt.sam.bam.rfp_counts.gz")
filename_with_dir <- filename
trimmed <- str_sub(filename, 1, (str_length(filename)-14))
this_data <- read.csv(filename_with_dir, sep="", head=T, skip=1, row.names = "Geneid") %>%
select(!!i := trimmed) %>%
rownames_to_column(var = "gene_id")
if(i==samples[1]){
combined <- this_data
}else{
combined <- combined %>%
full_join(this_data, by = "gene_id")
}
}
col_data <- data.frame(samples = colnames(combined)[2:18]) %>%
mutate(condition = str_sub(samples,1,1))
matrix <- as.matrix(combined %>% column_to_rownames(var = "gene_id"))
dds <- DESeqDataSetFromMatrix(countData = matrix,
colData = col_data,
design = ~ condition)
sample_names <- c("A", "B", "C", "D", "E", "G")
all_comparisons <- data.frame(comparison = c(), reference = c(), pvalue = c(), log2fold = c())
for(i in sample_names){
dds$condition <- relevel(dds$condition, ref = i)
dds <- DESeq(dds)
for(j in sample_names){
if (j != i){
comparison_name <- paste0("condition_", j, "_vs_", i)
res <- results(dds, name=comparison_name)
mapt <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
filter(gene_id == "ENSG00000186868.15")
this_comparison = data.frame(comparison = j,
reference = i,
pvalue = mapt$pvalue,
log2fold = mapt$log2FoldChange)
all_comparisons <- bind_rows(all_comparisons, this_comparison)
}
}
}
square_pvalue <- all_comparisons %>%
dplyr::select(-log2fold) %>%
pivot_wider(names_from = "reference", values_from = "pvalue") %>%
arrange(comparison)
write_csv(square_pvalue, paste0(here(), "/data/square_pvalues.csv"))
square_lg2 <- all_comparisons %>%
dplyr::select(-pvalue) %>%
pivot_wider(names_from = "reference", values_from = "log2fold") %>%
arrange(comparison)
write_csv(square_lg2, paste0(here(), "/data/square_lg2.csv"))
ggplot(all_comparisons, aes(x = reference, y = comparison)) +
geom_tile(aes(fill=log2fold)) +
scale_fill_gradient2(low="blue", mid= "white" ,high="red", midpoint=0,
limits = c(-2,2), breaks =c(-2, -1, 0, 1, 2))  +
theme_minimal() +
ggtitle("Pair-wise comparison of number of RFPs aligning to MAPT gene") +
xlab("Reference Sample") +
ylab("Comparison Sample")
# state reference
i <- "A"
# state comparison
j <- "B"
dds$condition <- relevel(dds$condition, ref = i)
dds <- DESeq(dds)
comparison_name <- paste0("condition_", j, "_vs_", i)
res <- results(dds, name=comparison_name)
yo <- data.frame(res)
View(yo)
min_counts <- 170
filtered <- combined %>%
filter(A1 +A2+A3+B1+B2+B3+C1+C2+C3+D1+D2+D3+E1+E2+E3+G1+G2 >= min_counts)
min_counts <- 170
filtered <- combined %>%
filter(A1 +A2+A3+B1+B2+B3+C1+C2+C3+D1+D2+D3+E1+E2+E3+G1+G2 >= min_counts)
min_counts <- 170
filtered <- combined %>%
filter(A1 +A2+A3+B1+B2+B3+C1+C2+C3+D1+D2+D3+E1+E2+E3+G1+G2 >= min_counts)
matrix <- as.matrix(filtered %>% column_to_rownames(var = "gene_id"))
View(matrix)
View(col_data)
dds <- DESeqDataSetFromMatrix(countData = matrix,
colData = col_data,
design = ~ condition)
# state reference
i <- "A"
# state comparison
j <- "B"
dds$condition <- relevel(dds$condition, ref = i)
dds <- DESeq(dds)
comparison_name <- paste0("condition_", j, "_vs_", i)
res <- results(dds, name=comparison_name)
res_data <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
left_join(info, by="gene_id")%>%
mutate(minus_log10_p = -log10(pvalue)) %>%
mutate(is_MAPT = gene_id == "ENSG00000186868.15") %>%
mutate(color = ifelse(is_MAPT, "red", "grey60")) %>%
mutate(name = ifelse(abs(log2FoldChange) >2 | pvalue < 0.001 | gene_name == "MAPT", gene_name, ""))
info <- read_tsv(paste0("here", "/data/longest_proteincoding_transcript_hs_details.txt"))
info <- read_tsv(paste0(here(), "/data/longest_proteincoding_transcript_hs_details.txt"))
res_data <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
left_join(info, by="gene_id")%>%
mutate(minus_log10_p = -log10(pvalue)) %>%
mutate(is_MAPT = gene_id == "ENSG00000186868.15") %>%
mutate(color = ifelse(is_MAPT, "red", "grey60")) %>%
mutate(name = ifelse(abs(log2FoldChange) >2 | pvalue < 0.001 | gene_name == "MAPT", gene_name, ""))
ggplot(res_data, aes(log2FoldChange, minus_log10_p, colour = color, name=name)) +
geom_point(size=1, alpha = 1) +
ggtitle(paste0("Volcano plot of condition B versus A with minimum \n", min_counts, " counts total across 17 samples")) +
scale_colour_identity() +
theme_minimal() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3)
View(res_data)
res_data <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
left_join(info, by="gene_id")%>%
mutate(minus_log10_p = -log10(pvalue)) %>%
mutate(is_MAPT = gene_id == "ENSG00000186868.15") %>%
mutate(color = ifelse(is_MAPT, "red", "grey60")) %>%
mutate(name = ifelse(abs(log2FoldChange) >2 | pvalue < 0.001 | gene_name == "MAPT", gene_name, "")) %>%
arrange(log2FoldChange)
View(res_data)
filtered <- combined
matrix <- as.matrix(filtered %>% column_to_rownames(var = "gene_id"))
dds <- DESeqDataSetFromMatrix(countData = matrix,
colData = col_data,
design = ~ condition)
# state reference
i <- "A"
# state comparison
j <- "B"
dds$condition <- relevel(dds$condition, ref = i)
dds <- DESeq(dds)
comparison_name <- paste0("condition_", j, "_vs_", i)
res <- results(dds, name=comparison_name)
info <- read_tsv(paste0(here(), "/data/longest_proteincoding_transcript_hs_details.txt"))
res_data <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
left_join(info, by="gene_id")%>%
mutate(minus_log10_p = -log10(pvalue)) %>%
mutate(is_MAPT = gene_id == "ENSG00000186868.15") %>%
mutate(color = ifelse(is_MAPT, "red", "grey60")) %>%
mutate(name = ifelse(abs(log2FoldChange) >2 | pvalue < 0.001 | gene_name == "MAPT", gene_name, "")) %>%
arrange(log2FoldChange)
View(res_data)
View(res_data)
ggplot(res_data, aes(log2FoldChange, minus_log10_p, colour = color, name=name)) +
geom_point(size=1, alpha = 1) +
ggtitle(paste0("Volcano plot of condition B versus A with minimum \n", min_counts, " counts total across 17 samples")) +
scale_colour_identity() +
theme_minimal() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3)
min_counts <- 170
filtered <- combined %>%
filter(A1 +A2+A3+B1+B2+B3+C1+C2+C3+D1+D2+D3+E1+E2+E3+G1+G2 >= min_counts)
matrix <- as.matrix(filtered %>% column_to_rownames(var = "gene_id"))
dds <- DESeqDataSetFromMatrix(countData = matrix,
colData = col_data,
design = ~ condition)
# state reference
i <- "A"
# state comparison
j <- "B"
dds$condition <- relevel(dds$condition, ref = i)
dds <- DESeq(dds)
comparison_name <- paste0("condition_", j, "_vs_", i)
res <- results(dds, name=comparison_name)
info <- read_tsv(paste0(here(), "/data/longest_proteincoding_transcript_hs_details.txt"))
res_data <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
left_join(info, by="gene_id")%>%
mutate(minus_log10_p = -log10(pvalue)) %>%
mutate(is_MAPT = gene_id == "ENSG00000186868.15") %>%
mutate(color = ifelse(is_MAPT, "red", "grey60")) %>%
mutate(name = ifelse(abs(log2FoldChange) >2 | pvalue < 0.001 | gene_name == "MAPT", gene_name, "")) %>%
arrange(log2FoldChange)
ggplot(res_data, aes(log2FoldChange, minus_log10_p, colour = color, name=name)) +
geom_point(size=1, alpha = 1) +
ggtitle(paste0("Volcano plot of condition B versus A with minimum \n", min_counts, " counts total across 17 samples")) +
scale_colour_identity() +
theme_minimal() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3)
min_counts_per_sample_average <- 10
min_counts <- 10*17
filtered <- combined %>%
filter(A1 +A2+A3+B1+B2+B3+C1+C2+C3+D1+D2+D3+E1+E2+E3+G1+G2 >= min_counts)
matrix <- as.matrix(filtered %>% column_to_rownames(var = "gene_id"))
dds <- DESeqDataSetFromMatrix(countData = matrix,
colData = col_data,
design = ~ condition)
# state reference
i <- "A"
# state comparison
j <- "B"
dds$condition <- relevel(dds$condition, ref = i)
dds <- DESeq(dds)
comparison_name <- paste0("condition_", j, "_vs_", i)
res <- results(dds, name=comparison_name)
info <- read_tsv(paste0(here(), "/data/longest_proteincoding_transcript_hs_details.txt"))
res_data <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
left_join(info, by="gene_id")%>%
mutate(minus_log10_p = -log10(pvalue)) %>%
mutate(is_MAPT = gene_id == "ENSG00000186868.15") %>%
mutate(color = ifelse(is_MAPT, "red", "grey60")) %>%
mutate(name = ifelse(abs(log2FoldChange) >2 | pvalue < 0.001 | gene_name == "MAPT", gene_name, "")) %>%
arrange(log2FoldChange)
ggplot(res_data, aes(log2FoldChange, minus_log10_p, colour = color, name=name)) +
geom_point(size=1, alpha = 1) +
ggtitle(paste0("Volcano plot of condition B versus A with minimum \n", min_counts, " counts total across 17 samples")) +
scale_colour_identity() +
theme_minimal() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3)
write_csv(res_data, paste0(here(), "/data/RFP_A_vs_B_volcano_data.csv"))
rfp_data <- read_csv(paste0(here(), "/data/RFP_A_vs_B_volcano_data.csv"))
```{r setup, include=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman")
library(pacman)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning=FALSE)
rfp_data <- read_csv(paste0(here(), "/data/RFP_A_vs_B_volcano_data.csv"))
ggplot(rfp_data, aes(log2FoldChange, minus_log10_p, colour = color, name=name)) +
geom_point(size=1, alpha = 1) +
ggtitle(paste0("Volcano plot of condition B versus A with minimum \n", min_counts, " counts total across 17 samples")) +
scale_colour_identity() +
theme_minimal() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3)
rfp_data <- read_csv(paste0(here(), "/data/RFP_A_vs_B_volcano_data.csv"))
min_counts_per_sample_average <- 10
min_counts <- min_counts_per_sample_average*17
ggplot(rfp_data, aes(log2FoldChange, minus_log10_p, colour = color, name=name)) +
geom_point(size=1, alpha = 1) +
ggtitle(paste0("Volcano plot of condition B versus A with minimum \n", min_counts, " counts total across 17 samples")) +
scale_colour_identity() +
theme_minimal() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3)
rfp_data2 <- rfp_data %>%
arrange(log2FoldChange) %>%
mutate(rank = 1:n())
mapt_rank = rfp_data2$rank[which(rfp_data2$gene_name == "MAPT")]
print(paste0("MAPT ranked ", mapt_rank, " of " nrow(rfp_data2))
print(paste0("MAPT ranked ", mapt_rank, " of " nrow(rfp_data2)))
print(paste0("MAPT ranked ", mapt_rank, " of ", nrow(rfp_data2)))
library(tidyverse)
library(Rsubread)
library(Biostrings)
library(DESeq2)
setwd("//data.thecrick.org/lab-ulej/working/Oscar/Roberto_Simone/quantseq/Mapped")
setwd("//data.thecrick.org/lab-ulej/working/Oscar/Roberto_Simone/quantseq/Mapped")
samples <- c("A1",
"A2",
"A3",
"B1",
"B2",
"B3",
"C1",
"C2",
"C3",
"D1",
"D2",
"D3",
"E1",
"E2",
"E3",
"G1",
"G2",
"G3")
setwd("//data.thecrick.org/lab-ulej/working/Oscar/Roberto_Simone/quantseq/Mapped")
samples <- c("A1",
"A2",
"A3",
"B1",
"B2",
"B3",
"C1",
"C2",
"C3",
"D1",
"D2",
"D3",
"E1",
"E2",
"E3",
"G1",
"G2",
"G3")
for(i in samples){
print(i)
filename <- paste0(i, ".Aligned.sortedByCoord.out.bam.cds_counts.gz")
filename_with_dir <- paste0(filename)
trimmed <- str_sub(filename, 1, (str_length(filename)-14))
this_data <- read.csv(filename_with_dir, sep="", head=T, skip=1, row.names = "Geneid") %>%
dplyr::select(!!i := trimmed) %>%
rownames_to_column(var = "gene_id")
#this_data[paste0(i, '_cpm')] = 1000000*this_data[i]/sum(this_data[i])
if(i==samples[1]){
combined <- this_data
}else{
combined <- combined %>%
full_join(this_data, by = "gene_id")
}
}
setwd("A:/home/users/wilkino/ALL_RIBOSEQ/Roberto_Simone/quantseq/Mapped")
samples <- c("A1",
"A2",
"A3",
"B1",
"B2",
"B3",
"C1",
"C2",
"C3",
"D1",
"D2",
"D3",
"E1",
"E2",
"E3",
"G1",
"G2",
"G3")
for(i in samples){
print(i)
filename <- paste0(i, ".Aligned.sortedByCoord.out.bam.cds_counts.gz")
filename_with_dir <- paste0(filename)
trimmed <- str_sub(filename, 1, (str_length(filename)-14))
this_data <- read.csv(filename_with_dir, sep="", head=T, skip=1, row.names = "Geneid") %>%
dplyr::select(!!i := trimmed) %>%
rownames_to_column(var = "gene_id")
#this_data[paste0(i, '_cpm')] = 1000000*this_data[i]/sum(this_data[i])
if(i==samples[1]){
combined <- this_data
}else{
combined <- combined %>%
full_join(this_data, by = "gene_id")
}
}
setwd("A:/home/users/wilkino/ALL_RIBOSEQ/Roberto_Simone/quantseq/Mapped")
samples <- c("A1",
"A2",
"A3",
"B1",
"B2",
"B3",
"C1",
"C2",
"C3",
"D1",
"D2",
"D3",
"E1",
"E2",
"E3",
"G1",
"G2",
"G3")
for(i in samples){
print(i)
filename <- paste0(i, ".Aligned.sortedByCoord.out.bam.cds_counts.gz")
filename_with_dir <- paste0(filename)
trimmed <- str_sub(filename, 1, (str_length(filename)-14))
this_data <- read.csv(filename_with_dir, sep="", head=T, skip=1, row.names = "Geneid") %>%
dplyr::select(!!i := trimmed) %>%
rownames_to_column(var = "gene_id")
#this_data[paste0(i, '_cpm')] = 1000000*this_data[i]/sum(this_data[i])
if(i==samples[1]){
combined <- this_data
}else{
combined <- combined %>%
full_join(this_data, by = "gene_id")
}
}
col_data <- data.frame(samples = colnames(combined)[2:19]) %>%
mutate(condition = str_sub(samples,1,1))
View(col_data)
View(combined)
### Make Volcano plot ####
min_counts <- 1000
col_data <- data.frame(samples = samples) %>%
mutate(condition = str_sub(samples,1,1))
filtered <- combined %>%
filter(A1 +A2+A3+B1+B2+B3+C1+C2+C3+D1+D2+D3+E1+E2+E3+G1+G2+G3 >= min_counts)
### Make Volcano plot ####
min_counts <- 1000
col_data <- data.frame(samples = samples) %>%
mutate(condition = str_sub(samples,1,1))
filtered <- combined %>%
filter(A1 +A2+A3+B1+B2+B3+C1+C2+C3+D1+D2+D3+E1+E2+E3+G1+G2+G3 >= min_counts)
matrix <- as.matrix(filtered %>% column_to_rownames(var = "gene_id"))
dds <- DESeqDataSetFromMatrix(countData = matrix,
colData = col_data,
design = ~ condition)
# state reference
i <- "A"
# state comparison
j <- "B"
# state comparison
j <- "B"
dds$condition <- relevel(dds$condition, ref = i)
dds <- DESeq(dds)
comparison_name <- paste0("condition_", j, "_vs_", i)
res <- results(dds, name=comparison_name)
res_data <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
left_join(info, by="gene_id")%>%
# left_join(lnc, by = "gene_name") %>%
mutate(minus_log10_p = -log10(pvalue)) %>%
mutate(is_MAPT = gene_id == "ENSG00000186868.15") %>%
mutate(colour = ifelse(is_MAPT, "red", "grey60"),
alpha =ifelse(is_MAPT, 1, 0.2),
colour2 = ifelse(padj<0.1, "blue", colour)) %>%
mutate(name = ifelse(abs(log2FoldChange) >2.5 | pvalue < 0.0001 | gene_name == "MAPT", gene_name, ""))
info <- read_tsv(paste0(here(), "/data/longest_proteincoding_transcript_hs_details.txt"))
res_data <- data.frame(res) %>%
rownames_to_column(var = "gene_id") %>%
left_join(info, by="gene_id")%>%
mutate(minus_log10_p = -log10(pvalue)) %>%
mutate(is_MAPT = gene_id == "ENSG00000186868.15") %>%
mutate(colour = ifelse(is_MAPT, "red", "grey60"),
alpha =ifelse(is_MAPT, 1, 0.2),
colour2 = ifelse(padj<0.1, "blue", colour)) %>%
mutate(name = ifelse(abs(log2FoldChange) >2.5 | pvalue < 0.0001 | gene_name == "MAPT", gene_name, ""))
ggplot(res_data, aes(log2FoldChange, minus_log10_p, color = colour2, alpha =1, name = name)) +
geom_point() +
ggtitle(comparison_name) +
scale_color_identity() +
scale_alpha_identity() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3) +
ggtitle(paste0("Quantseq B versus A for min total \ncounts of ", min_counts, " across 18 samples")) +
theme_minimal()
write_csv("res_data", paste0(here(), "/data/quantseq_A_vs_B_volcano_data.csv"))
write_csv(res_data, paste0(here(), "/data/quantseq_A_vs_B_volcano_data.csv"))
quantseq_data <- read_csv(paste0(here(), "/data/quantseq_A_vs_B_volcano_data.csv"))
quantseq_data <- read_csv(paste0(here(), "/data/quantseq_A_vs_B_volcano_data.csv"))
min_counts_quantseq <- 1000
ggplot(res_data, aes(log2FoldChange, minus_log10_p, color = colour2, alpha =1, name = name)) +
geom_point() +
ggtitle(comparison_name) +
scale_color_identity() +
scale_alpha_identity() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3) +
ggtitle(paste0("Quantseq B versus A for min total \ncounts of ", min_counts_quantseq, " across 18 samples")) +
theme_minimal()
View(quantseq_data)
View(quantseq_data)
source('~/GitHub/scripts_PPI-networks/riboseq_quantseq/quantseq_preprocessing.R')
source('~/GitHub/scripts_PPI-networks/riboseq_quantseq/quantseq_preprocessing.R')
source('~/GitHub/scripts_PPI-networks/riboseq_quantseq/all_riboseq_preprocessing.R')
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning=FALSE)
if (!require("pacman")) install.packages("pacman")
library(pacman)
p_load("tidyverse", "here")
sq_lg2 <- read_csv(paste0(here(), "/data/square_lg2.csv"))
all_comparisons <- sq_lg2 %>%
pivot_longer(cols = c("A", "B", "C", "D", "E", "G"),
names_to="reference",
values_to = "log2fold") %>%
filter(!is.na(log2fold))
ggplot(all_comparisons, aes(x = reference, y = comparison)) +
geom_tile(aes(fill=log2fold)) +
scale_fill_gradient2(low="blue", mid= "white" ,high="red", midpoint=0,
limits = c(-2,2), breaks =c(-2, -1, 0, 1, 2))  +
theme_minimal() +
ggtitle("Pair-wise comparison of number of RFPs aligning to MAPT gene") +
xlab("Reference Sample") +
ylab("Comparison Sample")
rfp_data <- read_csv(paste0(here(), "/data/RFP_A_vs_B_volcano_data.csv"))
min_counts_per_sample_average <- 10
min_counts <- min_counts_per_sample_average*17
ggplot(rfp_data, aes(log2FoldChange, minus_log10_p, colour = color, name=name)) +
geom_point(size=1, alpha = 1) +
ggtitle(paste0("Volcano plot of condition B versus A with minimum \n", min_counts, " counts total across 17 samples")) +
scale_colour_identity() +
theme_minimal() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3)
rfp_data2 <- rfp_data %>%
arrange(log2FoldChange) %>%
mutate(rank = 1:n())
mapt_rank = rfp_data2$rank[which(rfp_data2$gene_name == "MAPT")]
print(paste0("MAPT ranked ", mapt_rank, " of ", nrow(rfp_data2)))
ggplot(rfp_data, aes(log2FoldChange, minus_log10_p, colour = color, name=name)) +
geom_point(size=1, alpha = 1) +
ggtitle(paste0("Volcano plot of condition B versus A with minimum \n", min_counts, " counts total across 17 samples")) +
scale_colour_identity() +
theme_minimal() +
geom_text(aes(label=name),hjust=0.6, vjust=1.2, size =3)
